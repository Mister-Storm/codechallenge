name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Run Checkstyle (Linter)
        run: mvn checkstyle:check

      - name: Run tests with coverage
        run: mvn clean test jacoco:report

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: target/site/jacoco/
          retention-days: 3

      - name: Display accurate coverage
        run: |
          if [ -f "target/site/jacoco/jacoco.csv" ]; then
            echo "ðŸ“Š Cobertura Real"
            echo "================="

            # Extrai dados da sua classe especÃ­fica
            CLASS_DATA=$(grep "ArraySumChecker" target/site/jacoco/jacoco.csv)
            IFS=',' read -r -a METRICS <<< "$CLASS_DATA"

            echo "MÃ©todo Principal:"
            echo "----------------"
            echo "â†’ InstruÃ§Ãµes: ${METRICS[4]}/${METRICS[3]} (${METRICS[4]} cobertas)"
            echo "â†’ Branches: ${METRICS[6]}/${METRICS[5]} (${METRICS[6]} cobertos)"
            echo "â†’ Linhas: ${METRICS[8]}/${METRICS[7]} (${METRICS[8]} cobertas)"

            echo ""
            echo "ðŸ’¡ O JaCoCo pode contar:"
            echo "- Construtores"
            echo "- MÃ©todos estÃ¡ticos"
            echo "- Inicializadores"
            echo "- MÃ©todos synthetic (gerados pelo compilador)"
          fi